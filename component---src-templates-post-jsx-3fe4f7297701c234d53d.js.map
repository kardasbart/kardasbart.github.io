{"version":3,"file":"component---src-templates-post-jsx-3fe4f7297701c234d53d.js","mappings":"gGAAA,IAAIA,EAAiB,EAAQ,MAEzBC,EAA2B,EAAQ,MAEvC,SAASC,EAAWC,EAAQC,EAAMC,GAiBhC,OAhBIJ,KACFK,EAAOC,QAAUL,EAAaM,QAAQC,UACtCH,EAAOC,QAAiB,QAAID,EAAOC,QAASD,EAAOC,QAAQG,YAAa,IAExEJ,EAAOC,QAAUL,EAAa,SAAoBC,EAAQC,EAAMC,GAC9D,IAAIM,EAAI,CAAC,MACTA,EAAEC,KAAKC,MAAMF,EAAGP,GAChB,IACIU,EAAW,IADGC,SAASC,KAAKH,MAAMV,EAAQQ,IAG9C,OADIN,GAAOL,EAAec,EAAUT,EAAMY,WACnCH,GAGTR,EAAOC,QAAiB,QAAID,EAAOC,QAASD,EAAOC,QAAQG,YAAa,GAGnER,EAAWW,MAAM,KAAMK,WAGhCZ,EAAOC,QAAUL,EACjBI,EAAOC,QAAiB,QAAID,EAAOC,QAASD,EAAOC,QAAQG,YAAa,G,iBCZxEJ,EAAOC,QAbP,WACE,GAAuB,oBAAZC,UAA4BA,QAAQC,UAAW,OAAO,EACjE,GAAID,QAAQC,UAAUU,KAAM,OAAO,EACnC,GAAqB,mBAAVC,MAAsB,OAAO,EAExC,IAEE,OADAC,QAAQJ,UAAUK,QAAQC,KAAKf,QAAQC,UAAUY,QAAS,IAAI,iBACvD,EACP,MAAOG,GACP,OAAO,IAKXlB,EAAOC,QAAiB,QAAID,EAAOC,QAASD,EAAOC,QAAQG,YAAa,G,qBCRxE,IAAMe,EAAcC,EAApB,MAEApB,EAAAA,QAAiB,CACfmB,YADFnB,I,spBCRA,IAAMqB,EAAQD,EAAd,MACQE,EAAQF,EAAhB,UACQG,EAAgBH,EAAxB,kBAEApB,EAAA,QAAiB,SAAqB,GACpCwB,IAAAA,EAGC,EAHDA,MACAC,EAEC,EAFDA,SACGC,EACF,OACKC,EAAWJ,EAAjB,GAGMK,EAAMP,EAAAA,SAAc,WACxB,MACE,OAAO,KAGT,IAAMQ,EAAS,GAGbR,MAHa,EAIbC,IAJa,GAAf,GAQMQ,EAAOC,OAAAA,KAAb,GACMC,EAASF,EAAAA,KAAS,SAAAG,GAAG,OAAIJ,EAAJ,MAG3B,OAFQ,mCAAR,KAEOK,WAAAA,EAAAA,CAAAA,IAAAA,OAAAA,EAAP,OACC,CAACT,EAlBJ,IAoBA,OAAOJ,EAAAA,cAAAA,EAAAA,EAAAA,GAAP,M,gKC5Ba,SAASc,EAAUT,GAChC,OACE,gBAACU,EAAA,EAAD,CAAWC,OAAK,GAiBd,gBAAC,EAAAC,EAAD,CAAaC,MAAOb,EAAMc,QAASC,IAAI,kBACvC,gBAAC,EAAAC,EAAD,CACEC,OAAO,QACPC,IAAI,0DACJH,IAAI,gBACJI,MAAO,IAJT,uBCjBS,SAASC,EAAT,GAAiC,IAATC,EAAQ,EAARA,KAE7BC,EAAsBD,EAAtBC,YAAaC,EAASF,EAATE,KACrB,OACE,gBAACC,EAAA,EAAD,KACE,0BAAKF,EAAYG,OACjB,6BAAQH,EAAYI,MACpB,yBAAIJ,EAAYK,UAChB,gBAAClB,EAAD,CACEK,SAASc,EAAAA,EAAAA,GAASN,EAAYO,eAC9BC,WAAWF,EAAAA,EAAAA,GAASN,EAAYS,mBAElC,gBAAC,EAAAtC,YAAD,KAAc8B,IAKb,IAAMS,GAAQC,E,QAAAA,IAAQ,sc","sources":["webpack://blog-react/./node_modules/@babel/runtime/helpers/construct.js","webpack://blog-react/./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack://blog-react/./node_modules/gatsby-plugin-mdx/index.js","webpack://blog-react/./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack://blog-react/./src/components/SwitchImg.jsx","webpack://blog-react/./src/templates/post.jsx"],"sourcesContent":["var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n","import React from \"react\";\nimport { GatsbyImage, StaticImage } from \"gatsby-plugin-image\";\nimport { Container } from \"react-bootstrap\";\n\nexport default function SwitchImg(props) {\n  return (\n    <Container fluid>\n      {/* <GatsbyImage\n        placeholder=\"dominantColor\"\n        layout=\"fixed\"\n        image={props.primary}\n        height={\"100\"}\n        width={\"200\"}\n        alt=\"Primary image\"\n      />\n      <GatsbyImage\n        placeholder=\"dominantColor\"\n        layout=\"fixed\"\n        image={props.secondary}\n        height={100}\n        width={200}\n        alt=\"Secondary image\"\n      /> */}\n      <GatsbyImage image={props.primary} alt=\"Primary image\" />\n      <StaticImage\n        layout=\"fixed\"\n        src=\"../../static/posts/first-post/images/thumbs/primary.jpg\"\n        alt=\"Primary image\"\n        width={100}\n        // height={100}\n      />\n    </Container>\n  );\n}\n","import React from \"react\";\nimport MainLayout from \"layouts/MainLayout\";\nimport { MDXRenderer } from \"gatsby-plugin-mdx\";\nimport SwitchImg from \"components/SwitchImg\";\nimport { getImage } from \"gatsby-plugin-image\";\nimport { graphql } from \"gatsby\";\n\nexport default function PostTemplate({ data }) {\n  // Here pageContext is passed in at build time by gatsby-node.js\n  const { frontmatter, body } = data;\n  return (\n    <MainLayout>\n      <h1>{frontmatter.title}</h1>\n      <small>{frontmatter.date}</small>\n      <p>{frontmatter.abstract}</p>\n      <SwitchImg\n        primary={getImage(frontmatter.primary_thumb)}\n        secondary={getImage(frontmatter.secondary_thumb)}\n      />\n      <MDXRenderer>{body}</MDXRenderer>\n    </MainLayout>\n  );\n}\n\nexport const query = graphql(`\n  query PostsData($slug: String) {\n    mdx(frontmatter: { slug: { eq: $slug } }) {\n      body\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        slug\n        abstract\n        primary_thumb {\n          childImageSharp {\n            gatsbyImageData\n          }\n        }\n        secondary_thumb {\n          childImageSharp {\n            gatsbyImageData\n          }\n        }\n      }\n    }\n  }\n`);\n"],"names":["setPrototypeOf","isNativeReflectConstruct","_construct","Parent","args","Class","module","exports","Reflect","construct","__esModule","a","push","apply","instance","Function","bind","prototype","arguments","sham","Proxy","Boolean","valueOf","call","e","MDXRenderer","require","React","mdx","useMDXScope","scope","children","props","mdxScope","End","fullScope","keys","Object","values","key","fn","SwitchImg","Container","fluid","G","image","primary","alt","S","layout","src","width","PostTemplate","data","frontmatter","body","MainLayout","title","date","abstract","getImage","primary_thumb","secondary","secondary_thumb","query","graphql"],"sourceRoot":""}